/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define LEFT_HYPER LS(LC(LA(LGUI)))
#define LH(key) LS(LC(LA(LG(key))))
#define LHYPER LEFT_HYPER
#define OFFICE LEFT_HYPER

#define LEFT_MEH LS(LC(LALT))
#define LM(key) LS(LC(LA(key)))
#define LMEH LEFT_MEH

#define RIGHT_HYPER RS(RC(RA(RGUI)))
#define RH(key) RS(RC(RA(RG(key))))
#define RHYPER RIGHT_HYPER

#define RIGHT_MEH RS(RC(RALT))
#define RM(key) RS(RC(RA(key)))
#define RMEH RIGHT_MEH

// USER DEFINED LAYERS
#define MACRO_LAYER 3

/ {
        combos {
            compatible = "zmk,combos";
            combo_esc_l {
                timeout-ms = <50>;
                key-positions = <27 28>;
                bindings = <&kp ESC>;
                layers = <0 3>;
            };
            combo_esc_r {
                timeout-ms = <50>;
                key-positions = <31 32>;
                bindings = <&kp ESC>;
                layers = <0 3>;
            };
        };
        behaviors {
            hold_to_toggle_layer: behavior_hold_to_toggle_layer {
                compatible = "zmk,behavior-hold-tap";
                #binding-cells = <2>;
                flavor = "hold-preferred";
                tapping-term-ms = <200>;
                bindings = <&tog>, <&kp>;

                label = "HOLD_TO_TOGGLE_LAYER";
                quick-tap-ms = <0>;
            };
            mwbl: behavior_move_window_bottom_left {
                compatible = "zmk,behavior-mod-morph";
                #binding-cells = <0>;
                bindings = <&kp LS(LG(LEFT))>, <&kp LH(N2)>;
                mods = <(MOD_LCTL|MOD_RCTL)>;
            };
            mwtl: behavior_move_window_top_left {
                compatible = "zmk,behavior-mod-morph";
                #binding-cells = <0>;
                bindings = <&mwbl>, <&kp LH(N0)>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
            };
            mwl: behavior_move_window_left {
                compatible = "zmk,behavior-mod-morph";
                #binding-cells = <0>;
                bindings = <&kp LEFT>, <&mwtl>;
                mods = <(MOD_LGUI|MOD_RGUI)>;
            };
            mwbr: behavior_move_window_bottom_right {
                compatible = "zmk,behavior-mod-morph";
                #binding-cells = <0>;
                bindings = <&kp LS(LG(RIGHT))>, <&kp LH(N3)>;
                mods = <(MOD_LCTL|MOD_RCTL)>;
            };
            mwtr: behavior_move_window_top_right {
                compatible = "zmk,behavior-mod-morph";
                #binding-cells = <0>;
                bindings = <&mwbr>, <&kp LH(N1)>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
            };
            mwr: behavior_move_window_right {
                compatible = "zmk,behavior-mod-morph";
                #binding-cells = <0>;
                bindings = <&kp RIGHT>, <&mwtr>;
                mods = <(MOD_LGUI|MOD_RGUI)>;
            };
            mwt: behavior_move_window_top {
                compatible = "zmk,behavior-mod-morph";
                #binding-cells = <0>;
                bindings = <&kp UP>, <&kp LH(N4)>;
                mods = <(MOD_LGUI|MOD_RGUI)>;
            };
            mwb: behavior_move_window_bottom {
                compatible = "zmk,behavior-mod-morph";
                #binding-cells = <0>;
                bindings = <&kp DOWN>, <&kp LH(N5)>;
                mods = <(MOD_LGUI|MOD_RGUI)>;
            };
            s_app: behavior_switch_app {
                compatible = "zmk,behavior-mod-morph";
                #binding-cells = <0>;
                bindings = <&kp LG(TAB)>, <&kp LS(LG(TAB))>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
            };
        };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  1  |  2  |  3  |  4  |  5  |   |  6  |  7   |  8  |  9  |  0  |  DEL |
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
// | SHFT |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | SHFT |
// | CTRL |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | CTRL |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &hold_to_toggle_layer MACRO_LAYER ESC  &kp N1 &kp N2 &kp N3   &kp N4 &kp N5    &kp N6  &kp N7 &kp N8    &kp N9  &kp N0   &kp DEL
   &kp TAB                                &kp Q  &kp W  &kp E    &kp R  &kp T     &kp Y   &kp U  &kp I     &kp O   &kp P    &mt LA(BSPC) BSPC
   &kp LSHFT                              &kp A  &kp S  &kp D    &kp F  &kp G     &kp H   &kp J  &kp K     &kp L   &kp SEMI &kp RSHFT
   &kp LCTRL                              &kp Z  &kp X  &kp C    &kp V  &kp B     &kp N   &kp M  &kp COMMA &kp DOT &kp FSLH &kp RCTRL
                                                        &kp LGUI &mo 1  &kp SPACE &kp RET &mo 2  &kp RALT
                        >;
                };

                lower_layer {
                    display-name = "LWR";
                    label = "LWR";
// -----------------------------------------------------------------------------------------
// | BTCLR| F1  | F2  | F3  | F4  | F5  |   | F6  | F7  | F8  | F9  | F10 |  DEL |
// |  TAB | F11 | F12 |     |     | LOCK|   | HP_T| VOL-| VOL+| BR- | BR+ | BSPC |
// | SHFT |     |     |     |     |     |   | LFT | DWN |  UP | RGT |     |      |
// | CTRL | BT1 | BT2 | BT3 | BT4 | BT5 |   |HYPER| PRV | P/P | NXT |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &bt BT_CLR  &kp F1        &kp F2        &kp F3        &kp F4        &kp F5         &kp F6         &kp F7        &kp F8        &kp F9        &kp F10       &kp DEL
   &kp TAB     &kp F11       &kp F12       &trans        &trans        &kp C_AL_LOCK  &kp LH(N1)     &kp C_VOL_DN  &kp C_VOL_UP  &kp C_BRI_DN  &kp C_BRI_UP  &mt LA(BSPC) BSPC
   &kp LSHFT   &trans        &trans        &trans        &trans        &trans         &kp LEFT       &kp DOWN      &kp UP        &kp RIGHT     &trans        &trans
   &kp LCTRL   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4   &kp LG(SPACE)  &kp C_PREV    &kp C_PP      &kp C_NEXT    &trans        &trans
                                           &kp LGUI      &trans        &kp SPACE      &kp RET        &trans        &kp RALT
                        >;
                };

                raise_layer {
                    display-name = "RSE";
                    label = "RSE";
// -----------------------------------------------------------------------------------------
// |  ESC |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |  DEL |
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
// |   -  |  [  |  ]  |  {  |  }  |  '  |   |  \  |  `  | "|" |     |     |      |
// |   _  |  =  |  +  |  (  |  )  |  "  |   |  ~  |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp ESC    &kp N1     &kp N2    &kp N3    &kp N4    &kp N5     &kp N6     &kp N7    &kp N8     &kp N9    &kp N0    &kp DEL
   &kp TAB    &kp EXCL   &kp AT    &kp HASH  &kp DLLR  &kp PRCNT  &kp CARET  &kp AMPS  &kp ASTRK  &kp LPAR  &kp RPAR  &mt LA(BSPC) BSPC
   &kp MINUS  &kp LBKT   &kp RBKT  &kp LBRC  &kp RBRC  &kp SQT    &kp BSLH   &kp GRAVE &kp PIPE   &trans    &trans    &trans
   &kp UNDER  &kp EQUAL  &kp PLUS  &kp LPAR  &kp RPAR  &kp DQT    &kp TILDE  &trans    &trans     &trans    &trans    &trans
                                   &kp LGUI  &trans    &kp SPACE  &kp RET    &trans    &kp RALT
                        >;
                };

                macro_layer {
                    display-name = "MCR";
                    label = "MCR";
// -----------------------------------------------------------------------------------------
// |      |  1  |  2  |  3  |  4  |  5  |   |  6  |  7   |  8  |  9  |  0  |  DEL |
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
// | SHFT |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | SHFT |
// | CTRL |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | CTRL |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &tog MACRO_LAYER &kp N0 &kp N0 &kp N0   &kp N0 &kp N0        &kp N0     &kp N0 &kp N0    &kp N0      &kp N0   &kp DEL
   &s_app           &kp Q  &kp W  &kp E    &kp R  &kp T         &kp Y      &kp U  &kp I     &kp O       &kp P    &mt LA(BSPC) BSPC
   &kp  LSHFT       &kp A  &kp S  &kp D    &kp F  &kp G         &mwl       &mwb   &mwt      &mwr        &kp SEMI &kp RSHFT
   &kp  LCTRL       &kp Z  &kp X  &kp C    &kp V  &kp B         &kp N      &kp M  &kp COMMA &key_repeat &kp FSLH &kp RCTRL
                                  &kp LGUI &mo 1  &kp LG(GRAVE) &kp LH(N6) &mo 2  &kp RALT
                        >;
                };
        };
};
